(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{353:function(t,i,s){"use strict";s.r(i);var n=function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"module-container"},[s("module-nav",{attrs:{topRoute:t.topRoute,pos:t.pos}}),t._v(" "),s("div",{staticClass:"module-content"},[s("div",{staticClass:"in"},[s("form",{on:{submit:function(i){return i.preventDefault(),t.submit(i)}}},[s("table",{staticClass:"input-tb"},[s("tbody",[s("tr",{class:t.getClass(t.error.name),attrs:{id:"name"}},[s("td",[t._v("名称")]),t._v(" "),s("td",[s("input",{directives:[{name:"model",rawName:"v-model",value:t.form.name,expression:"form.name"}],staticClass:"form-text",attrs:{type:"text"},domProps:{value:t.form.name},on:{input:function(i){i.target.composing||t.$set(t.form,"name",i.target.value)}}}),t._v(" "),s("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),s("span",{staticClass:"tip"}),t._v(" "),s("span",{staticClass:"msg"},[t._v(t._s(t.error.name))])])]),t._v(" "),s("tr",{class:t.getClass(t.error.brand_id),attrs:{id:"brand_id"}},[s("td",[t._v("品牌")]),t._v(" "),s("td",[s("v-brand",{ref:"brand",attrs:{brand:t.brand}}),t._v(" "),s("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),s("span",{staticClass:"tip"}),t._v(" "),s("span",{staticClass:"msg"},[t._v(t._s(t.error.brand_id))])],1)]),t._v(" "),s("tr",{class:t.getClass(t.error.car_series_group_id),attrs:{id:"car_series_group_id"}},[s("td",[t._v("分组")]),t._v(" "),s("td",[s("i-select",{staticStyle:{width:"300px"},model:{value:t.form.car_series_group_id,callback:function(i){t.$set(t.form,"car_series_group_id",i)},expression:"form.car_series_group_id"}},t._l(t.group,function(i){return s("i-option",{key:i.id,attrs:{value:i.id}},[t._v(t._s(i.name))])}),1),t._v(" "),s("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),s("span",{staticClass:"tip"}),t._v(" "),s("span",{staticClass:"msg"},[t._v(t._s(t.error.car_series_group_id))])],1)]),t._v(" "),s("tr",{class:t.getClass(t.error.weight),attrs:{id:"weight"}},[s("td",[t._v("权重")]),t._v(" "),s("td",[s("input",{directives:[{name:"model",rawName:"v-model",value:t.form.weight,expression:"form.weight"}],staticClass:"form-text",attrs:{type:"number",step:"0"},domProps:{value:t.form.weight},on:{input:function(i){i.target.composing||t.$set(t.form,"weight",i.target.value)}}}),t._v(" "),s("span",{staticClass:"necessary"}),t._v(" "),s("span",{staticClass:"tip"},[t._v("默认：0，仅允许输入整数")]),t._v(" "),s("span",{staticClass:"msg"},[t._v(t._s(t.error.weight))])])]),t._v(" "),t._m(0)])])])])]),t._v(" "),s("v-loading",{ref:"loading"})],1)};n._withStripped=!0;var e={name:"v-car-series",data:function(){return{form:{name:"",car_series_group_id:"",brand_id:"",weight:0},error:{},ajax:{get:null,submit:null},dom:{},ins:{loading:null,image:null},pending:{submit:null},data:{},callback:{},api:carSeriesApi,brand:[],group:[]}},created:function(){},mounted:function(){this.initDom(),this.initInstance(),this.initialize()},mixins:[mixins.state,mixins.loading,mixins.form.get,mixins.form.confirm],methods:{initDom:function(){},initInstance:function(){},initialize:function(){var t=this;this.ins.loading.show(),new Promise(function(i){var s=0;brandApi.all(function(n,e){if(200!=e)return t.eNotice(n),void i(!1);t.brand=n,t.$nextTick(function(){t.initBrand()}),2==++s&&i(!0)}),carSeriesGroupApi.all(function(n,e){if(200!=e)return t.eNotice(n),void i(!1);t.group=n,2==++s&&i(!0)})}).then(function(i){i&&t.getData(function(){t.ins.brand.checked(t.form.brand_id)})}).finally(function(){t.ins.loading.hide()})},initBrand:function(){var t=this;this.ins.brand=new Brand(this.$refs.brand.$el,{multiple:!1,checked:function(i){t.form.brand_id=i},unchecked:function(){t.form.brand_id=""}})},check:function(t){return{status:!0,field:"",msg:""}},submit:function(){var t=this;new Promise(function(i){if(t.pending.submit)t.$info("请求中...请耐心等待");else{var s=t.check();if(!s.status)return t.error[s.field]=s.msg,void vScroll(s.field);t.pending.submit=!0,t.ins.loading.show(),t.ajax.submit=t.api[t.param.mode](t.form,function(s,n){if(t.error={},200!=n)return t.initialState("loading","submit","submit"),400==n?(t.error=s,void vScroll(G.firstKey(s))):void t.$error(s);t.form.id=s,i()}),t.ins.loading.setArgs(t.ajax.submit,"submit")}}).then(function(){t.confirm("车系列表","/carSeries/list")}).finally(function(){t.initialState("loading","submit","submit")})}}},r=(s(393),s(568),s(569),s(14)),a=Object(r.a)(e,n,[function(){var t=this.$createElement,i=this._self._c||t;return i("tr",[i("td",{attrs:{colspan:"2"}},[i("button",{staticClass:"run-button run-button-submit",attrs:{type:"submit"}},[this._v("提交")])])])}],!1,null,"31f5b61c",null);a.options.__file="source/vue/view/carSeries/carSeries.vue";i.default=a.exports},392:function(t,i,s){},393:function(t,i,s){"use strict";var n=s(392);s.n(n).a},424:function(t,i,s){},425:function(t,i,s){},568:function(t,i,s){"use strict";var n=s(424);s.n(n).a},569:function(t,i,s){"use strict";var n=s(425);s.n(n).a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,