(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{377:function(t,i,n){"use strict";n.r(i);var e=function(){var t=this,i=t.$createElement,n=t._self._c||i;return n("div",{staticClass:"module-container"},[n("module-nav",{attrs:{topRoute:t.topRoute,pos:t.pos}}),t._v(" "),n("div",{staticClass:"module-content"},[n("div",{staticClass:"in"},[n("v-menu-switch",{ref:"menu-switch",attrs:{data:t.navMenu}}),t._v(" "),n("form",{on:{submit:function(i){return i.preventDefault(),t.submit(i)}}},[n("div",{ref:"list",staticClass:"list"},t._l(t.rule,function(i){return n("div",{key:i.id,staticClass:"module",attrs:{"data-id":i.id}},[n("div",{staticClass:"content"},[n("div",{staticClass:"top"},[n("div",{staticClass:"left"},[t._v("模块检测结果")]),t._v(" "),n("div",{staticClass:"right"},[n("textarea",{directives:[{name:"model",rawName:"v-model",value:i.result,expression:"module.result"}],key:i.id,staticClass:"form-textarea",attrs:{placeholder:"请输入检测结果..."},domProps:{value:i.result},on:{input:function(n){n.target.composing||t.$set(i,"result",n.target.value)}}})])]),t._v(" "),n("div",{staticClass:"btm"},t._l(i.position,function(i){return n("div",{key:i.id,staticClass:"item"},[n("div",{staticClass:"pos"},[i.group?n("span",[t._v("位置分组："+t._s(i.group.name))]):t._e(),t._v(t._s(" ".repeat(8))+"检测位置："+t._s(i.map_value?i.name+"【映射值："+i.map_value+"】":i.name))]),t._v(" "),n("div",{staticClass:"list"},t._l(i.item,function(i){return n("div",{key:i.id,staticClass:"line"},[n("div",{staticClass:"name"},[t._v(t._s(i.map_value?i.name+"【映射值："+i.map_value+"】":i.name))]),t._v(" "),n("div",{staticClass:"value"},[n("RadioGroup",{model:{value:i.value,callback:function(n){t.$set(i,"value",n)},expression:"item.value"}},t._l(i.option,function(i){return n("Radio",{key:i.key,attrs:{label:i.key}},[t._v(t._s(i.value))])}),1)],1),t._v(" "),n("div",{staticClass:"desc"},[n("input",{directives:[{name:"model",rawName:"v-model",value:i.desc,expression:"item.desc"}],staticClass:"form-text",attrs:{type:"text",placeholder:"结果描述"},domProps:{value:i.desc},on:{input:function(n){n.target.composing||t.$set(i,"desc",n.target.value)}}})])])}),0)])}),0)]),t._v(" "),i.image?n("div",{staticClass:"preview"},[n("div",{staticClass:"function"},[n("v-button",{attrs:{color:"blue"},on:{click:function(i){t.opacity=.2}}},[t._v("透明度：20%")]),t._v(" "),n("v-button",{attrs:{color:"blue"},on:{click:function(i){t.opacity=.5}}},[t._v("透明度：50%")]),t._v(" "),n("v-button",{attrs:{color:"blue"},on:{click:function(i){t.opacity=1}}},[t._v("透明度：100%")])],1),t._v(" "),n("div",{staticClass:"con",style:"opacity: "+t.opacity+";",on:{click:function(n){return t.toLink(i.image_explain)}}},[n("img",{staticClass:"image",attrs:{src:i.image_explain}})])]):t._e()])}),0),t._v(" "),n("div",{staticClass:"submit"},[n("v-button",{attrs:{color:"submit",type:"submit"}},[t._v("提交")])],1)])],1)]),t._v(" "),n("v-loading",{ref:"loading"})],1)};e._withStripped=!0;var a=n(396),o=n.n(a),s=n(452),r=n.n(s),u={name:"v-report",data:function(){return{form:{},dom:{},ins:{},ajax:{},pending:{},callback:{},value:{},type:"",api:carApi,menu:"one",navMenu:[{id:"one",name:"驾驶系统检测"},{id:"two",name:"控制系统检测"}],rule:[],report:[],opacity:1}},mixins:[mixins.loading,mixins.state,mixins.form.menuSwitch,mixins.form.confirm],mounted:function(){this.initDom(),this.initStatic(),this.initDynamic(),this.initInstance(),this.initialize()},methods:{initDom:function(){this.dom.list=G(this.$refs.list)},initStatic:function(){this.form.id=this.param.id},initDynamic:function(){this.dom.optionSet=this.dom.list.children()},initInstance:function(){},genMenu:function(){for(var t=this,i=0,n=null,e=[];i<this.rule.length;++i)n=this.rule[i],e.push({id:n.id,name:n.name}),0==i&&(this.menu=n.id);this.navMenu=e,this.$nextTick(function(){t.initMenuSwitch()})},initialize:function(){var t=this;new Promise(function(i){t.pendingState("loading"),t.api.rule(function(n,e){i(),200==e?(n.forEach(function(t){t.result="",t.position.forEach(function(t){t.item.forEach(function(t){t.option=G.jsonDecode(t.option),t.desc=""})})}),t.rule=n):t.eNotice(n)})}).then(function(){return new Promise(function(i){t.$nextTick(function(){t.initDynamic(),t.genMenu(),t.api.getReport({id:t.param.id},function(n,e){if(i(),200==e){t.report=n;var a=r()(t.rule),o=function(t,i,n){for(var e=0;e<n.length;++e){var a=n[e];if(a[i]==t)return a}return null};a.forEach(function(t){var i=o(t.id,"detection_module_id",n);i=i||{},t.result=i.result?i.result:"",G.isArray(t.position)&&t.position.forEach(function(t){var n=i.position?i.position:[],e=o(t.id,"detection_pos_id",n);e=e||{},G.isArray(t.item)&&t.item.forEach(function(t){var i=e.item?e.item:[],n=o(t.id,"detection_item_id",i);n=n||{},t.value=n.value?n.value:t.value,t.desc=n.desc?n.desc:t.desc})})}),t.rule=a}else{if(404==e)return;t.eNotice(n)}})})})}).finally(function(){t.initialState("loading")})},check:function(){return{status:!0,field:"",msg:""}},submit:function(){var t=this;new Promise(function(i){if(t.pending.submit)t.$info("请求中...请耐心等待");else{var n=t.check();if(!n.status)return t.error=G.createObject(t.error,o()({},n.field,n.msg)),void t.vScroll(n.field);console.log(t.rule),t.form.report=G.jsonEncode(t.rule),t.pendingState("loading","submit"),t.ajax.submit=t.api[t.param.mode](t.form,function(n,e){if(t.error={},200!=e)return t.initialState("loading","submit","submit"),void t.$error(n);i()}),t.ins.loading.setArgs(t.ajax.submit,"submit")}}).then(function(){t.confirm("车辆列表","/car/list")}).finally(function(){t.initialState("loading","submit","submit")})}}},c=(n(393),n(632),n(633),n(14)),l=Object(c.a)(u,e,[],!1,null,"75dfdd0a",null);l.options.__file="source/vue/view/car/report.vue";i.default=l.exports},392:function(t,i,n){},393:function(t,i,n){"use strict";var e=n(392);n.n(e).a},396:function(t,i){t.exports=function(t,i,n){return i in t?Object.defineProperty(t,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[i]=n,t}},452:function(t,i,n){var e=n(453),a=n(454),o=n(455);t.exports=function(t){return e(t)||a(t)||o()}},453:function(t,i){t.exports=function(t){if(Array.isArray(t)){for(var i=0,n=new Array(t.length);i<t.length;i++)n[i]=t[i];return n}}},454:function(t,i){t.exports=function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}},455:function(t,i){t.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}},490:function(t,i,n){},491:function(t,i,n){},632:function(t,i,n){"use strict";var e=n(490);n.n(e).a},633:function(t,i,n){"use strict";var e=n(491);n.n(e).a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,