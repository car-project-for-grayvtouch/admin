(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{350:function(t,s,i){"use strict";i.r(s);var a=function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("div",{staticClass:"module-container"},[i("module-nav",{attrs:{topRoute:t.topRoute,pos:t.pos}}),t._v(" "),i("div",{staticClass:"module-content"},[i("div",{staticClass:"in"},[i("form",{on:{submit:function(s){return s.preventDefault(),t.submit(s)}}},[i("table",{staticClass:"input-tb"},[i("tbody",[i("tr",{class:t.getClass(t.error.username),attrs:{id:"username"}},[i("td",[t._v("用户名")]),t._v(" "),i("td",[i("input",{directives:[{name:"model",rawName:"v-model",value:t.form.username,expression:"form.username"}],staticClass:"form-text",attrs:{type:"text"},domProps:{value:t.form.username},on:{input:function(s){s.target.composing||t.$set(t.form,"username",s.target.value)}}}),t._v(" "),i("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),i("span",{staticClass:"tip"}),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.username))])])]),t._v(" "),i("tr",{class:t.getClass(t.error.password),attrs:{id:"password"}},[i("td",[t._v("密码")]),t._v(" "),i("td",[i("input",{directives:[{name:"model",rawName:"v-model",value:t.form.password,expression:"form.password"}],staticClass:"form-text",attrs:{type:"text"},domProps:{value:t.form.password},on:{input:function(s){s.target.composing||t.$set(t.form,"password",s.target.value)}}}),t._v(" "),i("span",{staticClass:"necessary"},["add"==t.param.mode?[t._v("*")]:t._e()],2),t._v(" "),i("span",{staticClass:"tip"},[t._v("密码长度至少6位")]),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.password))])])]),t._v(" "),i("tr",{class:t.getClass(t.error.avatar),attrs:{id:"avatar"}},[i("td",[t._v("头像")]),t._v(" "),i("td",{ref:"image-container"},[i("div",{staticClass:"upload-image"},[t._m(0),t._v(" "),i("div",{staticClass:"init-show-image-list"},["edit"==t.param.mode&&t.form.avatar_explain?i("img",{staticClass:"init-show-image",attrs:{src:t.form.avatar_explain}}):t._e()]),t._v(" "),i("div",{staticClass:"preview-images hide"}),t._v(" "),t._m(1)]),t._v(" "),i("span",{staticClass:"tip"}),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.avatar))])])]),t._v(" "),i("tr",{class:t.getClass(t.error.phone),attrs:{id:"phone"}},[i("td",[t._v("手机号码")]),t._v(" "),i("td",[i("input",{directives:[{name:"model",rawName:"v-model",value:t.form.phone,expression:"form.phone"}],staticClass:"form-text",attrs:{type:"number",step:"0"},domProps:{value:t.form.phone},on:{input:function(s){s.target.composing||t.$set(t.form,"phone",s.target.value)}}}),t._v(" "),i("span",{staticClass:"necessary"}),t._v(" "),i("span",{staticClass:"tip"},[t._v("请输入数字")]),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.phone))])])]),t._v(" "),i("tr",{class:t.getClass(t.error.role_id),attrs:{id:"role_id"}},[i("td",[t._v("用户角色")]),t._v(" "),i("td",[i("i-select",{staticStyle:{width:"300px"},model:{value:t.form.role_id,callback:function(s){t.$set(t.form,"role_id",s)},expression:"form.role_id"}},t._l(t.role,function(s){return i("i-option",{key:s.id,attrs:{value:s.id}},[t._v(t._s(s.name))])}),1),t._v(" "),i("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),i("span",{staticClass:"tip"}),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.role_id))])],1)]),t._v(" "),t._m(2)])])])])]),t._v(" "),i("v-loading",{ref:"loading"})],1)};a._withStripped=!0;var e={name:"v-route",data:function(){return{form:{},error:{},ajax:{get:null,submit:null},dom:{},ins:{loading:null,small:null,big:null},pending:{submit:null},data:{},callback:{image:null},api:adminApi,role:[]}},created:function(){},mounted:function(){this.initDom(),this.initInstance(),this.initialize()},mixins:[mixins.loading],methods:{initDom:function(){this.dom.imageContainer=G(this.$refs["image-container"])},initInstance:function(){var t=this;this.ins.image=new UploadImage(this.dom.imageContainer.get(0),{pluginUrl:topContext.plugin+"UploadImage/",mode:"override",url:topContext.imageApi,field:"image",success:function(s,i){G.isFunction(t.callback.image)&&t.callback.image({res:s,code:i})}})},initialize:function(){var t=this;new Promise(function(s){t.ins.loading.show(),t.ajax.all=roleApi.all(function(i,a){s(),200==a?t.role=i:t.$error(i)}),t.ins.loading.setArgs(t.ajax.all)}).then(function(){if("edit"==t.param.mode)return new Promise(function(s){t.ajax.getData=t.api.detail(t.param.id,function(i,a){s(),200==a?t.form=i:t.$error(i)}),t.ins.loading.setArgs(t.ajax.getData)})}).finally(function(){t.ins.loading.hide()})},check:function(t){return{status:!0,field:"",msg:""}},submit:function(){var t=this;if(this.pending.submit)layer.alert("请求中...请耐心等待");else{var s=this.check();if(!s.status)return this.error[s.field]=s.msg,void vScroll(s.field);this.pending.submit=!0,this.ins.loading.show();var i=this;new Promise(function(s){t.ajax.submit=t.api[t.param.mode](t.form,function(i,a){if(t.error={},200!=a)return t.pending.submit=!1,t.ins.loading.hide(),400==a?(t.error=i,void vScroll(G.firstKey(i))):void t.$error(i);t.form.id=i,s()}),t.ins.loading.setArgs(t.ajax.submit,"submit")}).then(function(){return new Promise(function(s){t.ins.image.empty()?s():(t.callback.image=s,t.ins.image.upload())})}).then(function(s){return new Promise(function(i){if(G.isUndefined(s))i();else{if(200!=s.code)return i(),void t.eNotice(s.res);s=s.res,t.api.image({id:t.form.id,image:s.url},function(s,a){i(),200==a||t.eNotice(s)})}})}).then(function(){t.$success("操作成功",{btn:["继续"+("edit"==t.param.mode?"编辑":"添加"),"用户列表"],btn1:function(t){layer.close(t)},btn2:function(){i.location("/admin/list",null,"_self")}})}).finally(function(){t.pending.submit=!1,t.ins.loading.hide()})}}}},n=(i(393),i(561),i(562),i(14)),r=Object(n.a)(e,a,[function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"select-images"},[s("div",{staticClass:"upload-show"},[s("div",{staticClass:"image-line"},[s("img",{staticClass:"image upload-image-btn",attrs:{src:""}}),s("span",{staticClass:"selected-count hide"},[this._v("10")])]),this._v(" "),s("div",{staticClass:"text-line"},[this._v("请选择要上传的图片")]),this._v(" "),s("div",{staticClass:"clear-selected",attrs:{title:"清空已选择的图片"}},[s("img",{staticClass:"image",attrs:{src:""}})]),this._v(" "),s("input",{staticClass:"upload-images-input",attrs:{type:"file",name:"upload_images",multiple:"multiple"}})]),this._v(" "),s("div",{staticClass:"tip"},[this._v("这边是提示内容")])])},function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("div",{staticClass:"upload-image-list hide"},[i("div",{staticClass:"upload-title"},[t._v("待上传列表")]),t._v(" "),i("div",{staticClass:"image-list"},[i("div",{staticClass:"list-content list-title"},[i("div",{staticClass:"item div-preview"},[t._v("图片预览")]),t._v(" "),i("div",{staticClass:"item div-type"},[t._v("类型")]),t._v(" "),i("div",{staticClass:"item div-size"},[t._v("大小")]),t._v(" "),i("div",{staticClass:"item div-speed"},[t._v("速度")]),t._v(" "),i("div",{staticClass:"item div-status"},[t._v("状态")]),t._v(" "),i("div",{staticClass:"item div-opr"},[t._v("操作")])]),t._v(" "),i("div",{staticClass:"list-content list-body"})])])},function(){var t=this.$createElement,s=this._self._c||t;return s("tr",[s("td",{attrs:{colspan:"2"}},[s("button",{staticClass:"run-button run-button-submit",attrs:{type:"submit"}},[this._v("提交")])])])}],!1,null,"7fb7dc74",null);r.options.__file="source/vue/view/admin/user.vue";s.default=r.exports},392:function(t,s,i){},393:function(t,s,i){"use strict";var a=i(392);i.n(a).a},417:function(t,s,i){},418:function(t,s,i){},561:function(t,s,i){"use strict";var a=i(417);i.n(a).a},562:function(t,s,i){"use strict";var a=i(418);i.n(a).a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,