(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{372:function(t,e,i){"use strict";i.r(e);var s=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"module-container"},[i("module-nav",{attrs:{topRoute:t.topRoute,pos:t.pos}}),t._v(" "),i("div",{staticClass:"module-content"},[i("div",{staticClass:"in"},[i("form",{on:{submit:function(e){return e.preventDefault(),t.submit(e)}}},[i("table",{staticClass:"input-tb"},[i("tbody",[i("tr",{class:t.getClass(t.error.name),attrs:{id:"name"}},[i("td",[t._v("名称")]),t._v(" "),i("td",[i("input",{directives:[{name:"model",rawName:"v-model",value:t.form.name,expression:"form.name"}],staticClass:"form-text",attrs:{type:"text"},domProps:{value:t.form.name},on:{input:function(e){e.target.composing||t.$set(t.form,"name",e.target.value)}}}),t._v(" "),i("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),i("span",{staticClass:"tip"}),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.name))])])]),t._v(" "),i("tr",{class:t.getClass(t.error.detection_pos_id),attrs:{id:"detection_pos_id"}},[i("td",[t._v("检测位置")]),t._v(" "),i("td",[i("i-select",{staticStyle:{width:"300px"},on:{"on-change":t.setPreview},model:{value:t.form.detection_pos_id,callback:function(e){t.$set(t.form,"detection_pos_id",e)},expression:"form.detection_pos_id"}},t._l(t.position,function(e){return i("i-option",{key:e.id,attrs:{value:e.id}},[t._v(t._s(e.group?e.name+"【分组："+e.group.name+"】":e.name))])}),1),t._v(" "),i("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),i("span",{staticClass:"tip"}),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.detection_pos_id))])],1)]),t._v(" "),i("tr",{class:t.getClass(t.error.option),attrs:{id:"option"}},[i("td",[t._v("选项")]),t._v(" "),i("td",{ref:"option"},[t._l(t.option,function(e,s){return i("div",{key:s,staticClass:"line"},[i("input",{directives:[{name:"model",rawName:"v-model",value:e.key,expression:"v.key"}],staticClass:"form-text",attrs:{type:"text",placeholder:"键名"},domProps:{value:e.key},on:{input:function(i){i.target.composing||t.$set(e,"key",i.target.value)}}}),t._v("\n                                ：\n                                "),i("input",{directives:[{name:"model",rawName:"v-model",value:e.value,expression:"v.value"}],staticClass:"form-text",attrs:{type:"text",placeholder:"键值"},domProps:{value:e.value},on:{input:function(i){i.target.composing||t.$set(e,"value",i.target.value)}}}),t._v(" "),i("button",{staticClass:"run-button run-button-orange",attrs:{type:"button"},on:{click:function(e){return t.option.splice(s,1)}}},[t._v("删除")]),t._v(" "),s+1==t.option.length?i("button",{staticClass:"run-button run-button-blue",attrs:{type:"button"},on:{click:function(e){return t.option.push({key:"",value:""})}}},[t._v("+ 新增")]):t._e()])}),t._v(" "),0==t.option.length?i("button",{staticClass:"run-button run-button-blue",attrs:{type:"button"},on:{click:function(e){return t.option.push({key:"",value:""})}}},[t._v("+ 新增")]):t._e(),t._v(" "),i("span",{staticClass:"necessary"}),t._v(" "),i("span",{staticClass:"tip"},[t._v("选项必须存在！如非必要请勿改动")]),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.option))])],2)]),t._v(" "),i("tr",{class:t.getClass(t.error.value),attrs:{id:"value"}},[i("td",[t._v("映射值")]),t._v(" "),i("td",[i("input",{directives:[{name:"model",rawName:"v-model",value:t.form.value,expression:"form.value"}],staticClass:"form-text",attrs:{type:"text"},domProps:{value:t.form.value},on:{input:function(e){e.target.composing||t.$set(t.form,"value",e.target.value)}}}),t._v(" "),i("span",{staticClass:"necessary"}),t._v(" "),i("span",{staticClass:"tip"},[t._v("选项默认值，请填写 key！默认：normal")]),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.value))])])]),t._v(" "),i("tr",{class:t.getClass(t.error.map_value),attrs:{id:"map_value"}},[i("td",[t._v("映射值")]),t._v(" "),i("td",[i("input",{directives:[{name:"model",rawName:"v-model",value:t.form.map_value,expression:"form.map_value"}],staticClass:"form-text",attrs:{type:"text"},domProps:{value:t.form.map_value},on:{input:function(e){e.target.composing||t.$set(t.form,"map_value",e.target.value)}}}),t._v(" "),i("span",{staticClass:"necessary"}),t._v(" "),i("span",{staticClass:"tip"},[t._v("如果有映射图，则该选项能很好的做映射")]),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.map_value))])])]),t._v(" "),i("tr",{class:t.getClass(t.error.weight),attrs:{id:"weight"}},[i("td",[t._v("权重")]),t._v(" "),i("td",[i("input",{directives:[{name:"model",rawName:"v-model",value:t.form.weight,expression:"form.weight"}],staticClass:"form-text",attrs:{type:"number",step:"0"},domProps:{value:t.form.weight},on:{input:function(e){e.target.composing||t.$set(t.form,"weight",e.target.value)}}}),t._v(" "),i("span",{staticClass:"necessary"}),t._v(" "),i("span",{staticClass:"tip"},[t._v("默认：0，仅允许输入整数")]),t._v(" "),i("span",{staticClass:"msg"},[t._v(t._s(t.error.weight))])])]),t._v(" "),t._m(0)])]),t._v(" "),i("div",{staticClass:"preview"},[i("div",{staticClass:"in"},[t.preview?i("img",{staticClass:"image",attrs:{src:t.preview}}):i("div",{staticClass:"empty"},[t._v("暂无模块映射图，请前往检测模块处添加（可选）")])])])])])]),t._v(" "),i("v-loading",{ref:"loading"})],1)};s._withStripped=!0;var n={name:"v-brand",data:function(){return{form:{name:"",detection_pos_id:0,weight:0,value:"normal"},error:{},ajax:{get:null,submit:null},dom:{},ins:{loading:null},pending:{submit:null},data:{},callback:{},api:detectionItemApi,position:[],option:[{key:"normal",value:"正常"},{key:"exception",value:"异常"}],preview:""}},created:function(){},mounted:function(){this.initDom(),this.initInstance(),this.initialize()},mixins:[mixins.state,mixins.loading,mixins.form.get,mixins.form.confirm],methods:{initDom:function(){},initInstance:function(){},initialize:function(){var t=this;new Promise(function(e){t.ins.loading.show(),detectionPosApi.all(function(i,s){if(200!=s)return t.eNotice(i),void e(!1);t.position=i,e(!0)})}).then(function(e){return new Promise(function(i){e?t.getData(function(){t.setPreview(t.form.detection_pos_id),"edit"==t.param.mode&&(t.option=G.jsonDecode(t.form.option)),i()}):i()})}).finally(function(){t.ins.loading.hide()})},check:function(t){return{status:!0,field:"",msg:""}},getOption:function(){this.form.option=G.jsonEncode(this.option)},setPreview:function(t){for(var e=this,i=0,s=null;i<this.position.length;++i)if((s=this.position[i]).id==t)return this.ajax.module instanceof G.ajax&&this.ajax.module.native("abort"),void(this.ajax.module=detectionModuleApi.detail(s.detection_module_id,function(t,i){200==i?e.preview=t.image_explain:e.eNotice(t)}));this.preview=""},submit:function(){var t=this;new Promise(function(e){if(t.pending.submit)t.$info("请求中...请耐心等待");else{var i=t.check();if(!i.status)return t.error[i.field]=i.msg,void vScroll(i.field);t.getOption(),t.pending.submit=!0,t.ins.loading.show(),t.ajax.submit=t.api[t.param.mode](t.form,function(i,s){if(t.error={},200!=s)return t.initialState("loading","submit","submit"),400==s?(t.error=i,void vScroll(G.firstKey(i))):void t.$error(i);t.form.id=i,e()}),t.ins.loading.setArgs(t.ajax.submit,"submit")}}).then(function(){t.confirm("检测项","/detectionItem/list")}).finally(function(){t.initialState("loading","submit","submit")})}}},a=(i(393),i(616),i(617),i(14)),o=Object(a.a)(n,s,[function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",{attrs:{colspan:"2"}},[e("button",{staticClass:"run-button run-button-submit",attrs:{type:"submit"}},[this._v("提交")])])])}],!1,null,"01f5038c",null);o.options.__file="source/vue/view/DetectionItem/thing.vue";e.default=o.exports},392:function(t,e,i){},393:function(t,e,i){"use strict";var s=i(392);i.n(s).a},477:function(t,e,i){},478:function(t,e,i){},616:function(t,e,i){"use strict";var s=i(477);i.n(s).a},617:function(t,e,i){"use strict";var s=i(478);i.n(s).a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,