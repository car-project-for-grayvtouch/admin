(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{383:function(t,i,s){"use strict";s.r(i);var e=function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"module-container"},[s("module-nav",{attrs:{topRoute:t.topRoute,pos:t.pos}}),t._v(" "),s("div",{staticClass:"module-content"},[s("div",{staticClass:"in"},[s("form",{on:{submit:function(i){return i.preventDefault(),t.submit(i)}}},[s("table",{staticClass:"input-tb"},[s("tbody",[s("tr",{class:t.getClass(t.error.platform_id),attrs:{id:"platform_id"}},[s("td",[t._v("平台")]),t._v(" "),s("td",[s("i-select",{staticStyle:{width:"300px"},model:{value:t.form.platform_id,callback:function(i){t.$set(t.form,"platform_id",i)},expression:"form.platform_id"}},t._l(t.platform,function(i){return s("i-option",{key:i.id,attrs:{value:i.id}},[t._v(t._s(i.name))])}),1),t._v(" "),s("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),s("span",{staticClass:"tip"}),t._v(" "),s("span",{staticClass:"msg"},[t._v(t._s(t.error.pos))])],1)]),t._v(" "),s("tr",{class:t.getClass(t.error.position),attrs:{id:"position"}},[s("td",[t._v("位置")]),t._v(" "),s("td",[s("i-select",{staticStyle:{width:"300px"},model:{value:t.form.position,callback:function(i){t.$set(t.form,"position",i)},expression:"form.position"}},t._l(t.$store.state.business.pos.image,function(i,e){return s("i-option",{key:e,attrs:{value:e}},[t._v(t._s(i))])}),1),t._v(" "),s("span",{staticClass:"necessary"},[t._v("*")]),t._v(" "),s("span",{staticClass:"tip"}),t._v(" "),s("span",{staticClass:"msg"},[t._v(t._s(t.error.position))])],1)]),t._v(" "),s("tr",[s("td",[t._v("封面")]),t._v(" "),s("td",{ref:"image-container"},[s("div",{staticClass:"upload-image"},[t._m(0),t._v(" "),s("div",{staticClass:"init-show-image-list"},["edit"==t.param.mode&&t.form.url?s("img",{staticClass:"init-show-image",attrs:{src:t.form.url}}):t._e()]),t._v(" "),s("div",{staticClass:"preview-images hide"}),t._v(" "),t._m(1)])])]),t._v(" "),s("tr",{class:t.getClass(t.error.link),attrs:{id:"link"}},[s("td",[t._v("链接")]),t._v(" "),s("td",[s("input",{directives:[{name:"model",rawName:"v-model",value:t.form.link,expression:"form.link"}],staticClass:"form-text",attrs:{type:"text"},domProps:{value:t.form.link},on:{input:function(i){i.target.composing||t.$set(t.form,"link",i.target.value)}}}),t._v(" "),s("span",{staticClass:"necessary"}),t._v(" "),s("span",{staticClass:"tip"}),t._v(" "),s("span",{staticClass:"msg"},[t._v(t._s(t.error.link))])])]),t._v(" "),s("tr",{class:t.getClass(t.error.weight),attrs:{id:"weight"}},[s("td",[t._v("权重")]),t._v(" "),s("td",[s("input",{directives:[{name:"model",rawName:"v-model",value:t.form.weight,expression:"form.weight"}],staticClass:"form-text",attrs:{type:"number",step:"0"},domProps:{value:t.form.weight},on:{input:function(i){i.target.composing||t.$set(t.form,"weight",i.target.value)}}}),t._v(" "),s("span",{staticClass:"necessary"}),t._v(" "),s("span",{staticClass:"tip"},[t._v("默认：0，仅允许输入整数")]),t._v(" "),s("span",{staticClass:"msg"},[t._v(t._s(t.error.weight))])])]),t._v(" "),t._m(2)])])])])]),t._v(" "),s("v-loading",{ref:"loading"})],1)};e._withStripped=!0;var a=s(397),n=s.n(a),o={name:"v-image",data:function(){return{form:{weight:0},error:{},ins:{},dom:{},ajax:{submit:null},pending:{submit:!1},api:showImageApi,callback:{image:null},image:{},platform:[]}},mixins:[mixins.loading,mixins.state,mixins.form.get,mixins.form.image,mixins.form.confirm],mounted:function(){this.initDom(),this.initInstance(),this.initialize()},methods:{initDom:function(){},initInstance:function(){},initialize:function(){var t=this;return new Promise(function(i,s){t.pendingState("loading"),platformApi.all(function(s,e){i(),200==e?t.platform=s:t.eNotice(s)})}).then(function(){return new Promise(function(i){t.getData(function(){i()})})}).finally(function(){t.initialState("loading")})},check:function(t){return{status:!0,field:"",msg:""}},submit:function(){var t=this;new Promise(function(i){if(t.pending.submit)t.$info("请求中...请耐心等待");else{t.pendingState("loading","submit");t.ajax.submit=t.api[t.param.mode](t.form,function(s,e){if(t.error={},200!=e)return t.initialState("loading","submit","submit"),400==e?(t.error=s,void vScroll(G.firstKey(s))):void t.$error(s);t.form.id=s,i()}),t.ins.loading.setArgs(t.ajax.submit,"submit")}}).then(function(){return new Promise(function(i){t.ins.image.empty()?i(!1):(t.callback.image=function(s,e){if(200!=e)return t.eNotice(s),void i(!1);t.image=s,i(!0)},t.ins.image.upload())})}).then(function(i){return new Promise(function(s){i?t.api.image(n()({id:t.form.id},t.image),function(i,e){200!=e&&t.eNotice(i),s()}):s()})}).then(function(){t.confirm("图片列表","/showImage/list")}).finally(function(){t.initialState("loading","submit","submit")})}}},r=(s(646),s(647),s(14)),l=Object(r.a)(o,e,[function(){var t=this.$createElement,i=this._self._c||t;return i("div",{staticClass:"select-images"},[i("div",{staticClass:"upload-show"},[i("div",{staticClass:"image-line"},[i("img",{staticClass:"image upload-image-btn",attrs:{src:""}}),i("span",{staticClass:"selected-count hide"},[this._v("10")])]),this._v(" "),i("div",{staticClass:"text-line"},[this._v("请选择要上传的图片")]),this._v(" "),i("div",{staticClass:"clear-selected",attrs:{title:"清空已选择的图片"}},[i("img",{staticClass:"image",attrs:{src:""}})]),this._v(" "),i("input",{staticClass:"upload-images-input",attrs:{type:"file",name:"upload_images"}})]),this._v(" "),i("div",{staticClass:"tip"},[this._v("这边是提示内容")])])},function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("div",{staticClass:"upload-image-list hide"},[s("div",{staticClass:"upload-title"},[t._v("待上传列表")]),t._v(" "),s("div",{staticClass:"image-list"},[s("div",{staticClass:"list-content list-title"},[s("div",{staticClass:"item div-preview"},[t._v("图片预览")]),t._v(" "),s("div",{staticClass:"item div-type"},[t._v("类型")]),t._v(" "),s("div",{staticClass:"item div-size"},[t._v("大小")]),t._v(" "),s("div",{staticClass:"item div-speed"},[t._v("速度")]),t._v(" "),s("div",{staticClass:"item div-status"},[t._v("状态")]),t._v(" "),s("div",{staticClass:"item div-opr"},[t._v("操作")])]),t._v(" "),s("div",{staticClass:"list-content list-body"})])])},function(){var t=this.$createElement,i=this._self._c||t;return i("tr",[i("td",{attrs:{colspan:"2"}},[i("button",{staticClass:"run-button run-button-submit",attrs:{type:"submit"}},[this._v("提交")])])])}],!1,null,"6bc2405c",null);l.options.__file="source/vue/view/showImage/thing.vue";i.default=l.exports},396:function(t,i){t.exports=function(t,i,s){return i in t?Object.defineProperty(t,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[i]=s,t}},397:function(t,i,s){var e=s(396);t.exports=function(t){for(var i=1;i<arguments.length;i++){var s=null!=arguments[i]?arguments[i]:{},a=Object.keys(s);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(s).filter(function(t){return Object.getOwnPropertyDescriptor(s,t).enumerable}))),a.forEach(function(i){e(t,i,s[i])})}return t}},506:function(t,i,s){},507:function(t,i,s){},646:function(t,i,s){"use strict";var e=s(506);s.n(e).a},647:function(t,i,s){"use strict";var e=s(507);s.n(e).a}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,